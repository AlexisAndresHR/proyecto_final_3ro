show databases;
select database();

create database if not exists BIBLIOTECA;
use BIBLIOTECA;
select database();
show tables;

create table if not exists ADMINISTRADORES(
	USUARIO    VARCHAR(30)    UNIQUE,
	CONTRASENA    VARCHAR(30)    NOT NULL);

create table if not exists AREAS(
	CODIGO    CHAR(4)    PRIMARY KEY,
	NOMBRE_AREA    VARCHAR(100)    NOT NULL);

create table if not exists LIBROS(
	ISBN    VARCHAR(13)    PRIMARY KEY,
	TITULO    VARCHAR(255)    NOT NULL,
	AUTOR    VARCHAR(120)    NOT NULL,
	EDITORIAL    VARCHAR(100)    NOT NULL,
	EDICION    VARCHAR(50)    NOT NULL,
	CODIGO_AREA    CHAR(4),
	foreign key (CODIGO_AREA) references AREAS(CODIGO));

create table if not exists INVENTARIO(
	ISBN_LIBRO    VARCHAR(13),
	CANTIDAD_EJEMPLARES    INTEGER    NOT NULL,
	foreign key (ISBN_LIBRO) references LIBROS(ISBN));

create table if not exists USUARIOS(
	ID    CHAR(8)    PRIMARY KEY,
	NOMBRE    VARCHAR(127)    NOT NULL,
	APELLIDOS    VARCHAR(127)    NOT NULL,
	EDAD    INTEGER    NOT NULL,
	TELEFONO    VARCHAR(10)    NOT NULL);

create table if not exists PRESTAMOS(
	NUMERO    INTEGER    AUTO_INCREMENT PRIMARY KEY,
	OPCION    VARCHAR(10)    DEFAULT 'PRESTAMO'    NOT NULL,
	ID_USUARIO    CHAR(8),
	FECHA    TIMESTAMP    DEFAULT    NOW(),
	NO_DIAS    INTEGER    UNSIGNED NULL,
	SANCION_POR_DIA_EXTRA    VARCHAR(7)    NULL,
	ISBN_LIBRO1    VARCHAR(13)    NOT NULL,
	CANTIDAD_LIBRO1    INTEGER    NOT NULL,
	ISBN_LIBRO2    VARCHAR(13)    NULL,
	CANTIDAD_LIBRO2    INTEGER    NULL,
	ISBN_LIBRO3    VARCHAR(13)    NULL,
	CANTIDAD_LIBRO3    INTEGER    NULL,
	foreign key (ID_USUARIO) references USUARIOS(ID));


-- Insercion de Datos (Pruebas).

insert into ADMINISTRADORES (USUARIO, CONTRASENA) values
	('ALEXIS ANDRES', '1234');


insert into AREAS (CODIGO, NOMBRE_AREA) values
	('AR01', 'LITERATURA CLASICA'),
	('AR02', 'HISTORIA'),
	('AR03', 'CIENCIAS NATURALES'),
	('AR04', 'GEOGRAFIA'),
	('AR05', 'ECOLOGIA'),
	('AR06', 'INFANTIL');


insert into LIBROS (ISBN, TITULO, AUTOR, EDITORIAL, EDICION, CODIGO_AREA) values
	('12G5R78T9H6GF', 'EL PADRINO', 'MARIO PUNZO', 'ESFINGE', 'SEGUNDA', 'AR01'),
	('12DE35G6H785T', 'LA METAMORFOSIS', 'FRANZ KAFKA', 'LIBROS SELECTOS', 'TERCERA', 'AR01'),
	('3F5G47TYH869F', 'HISTORIA DE MEXICO', 'CLAUDIO ALVAREZ', 'PATRIA', 'SEGUNDA', 'AR02'),
	('123ABC52FS5-1', 'CUIDANDO MI PLANETA', 'ROSA MARIA GUEVARA', 'SANTILLANA', 'PRIMERA', 'AR05'),
	('4AS1294FGB21A', 'APRENDER JUGANDO', 'MARIO CONTRERAS R.', 'PUZZLE', 'SEGUNDA', 'AR06'),
	('00IALO-45-12S', 'VOLCANES DE MEXICO', 'ERNESTO FIGUEROA Y LUISA ALVAREZ', 'LA NACION', 'CUARTA', 'AR04');


insert into INVENTARIO(ISBN_LIBRO, CANTIDAD_EJEMPLARES) values
	('12G5R78T9H6GF', 1),
	('12DE35G6H785T', 2),
	('3F5G47TYH869F', 3),
	('123ABC52FS5-1', 3),
	('4AS1294FGB21A', 2),
	('00IALO-45-12S', 2);


insert into USUARIOS (ID, NOMBRE, APELLIDOS, EDAD, TELEFONO) values
	('USER0001', 'CARLOS', 'RODRIGUEZ SALAZAR', 18, '7752363214'),
	('USER0002', 'RODRIGO', 'HERNANDEZ  SALAS', 21, '7711234578'),
	('USER0003', 'ROBERTO', 'GONZALEZ LEON', 16, '7756984512'),
	('USER0004', 'PEDRO', 'LOPEZ CASTILLO', 29, '7751258964'),
	('USER0005', 'SERGIO', 'VERA MARTINEZ', 10, '7758964213'),
	('USER0006', 'ALEXANDRE', 'HERNANDEZ RAMIREZ', 23, '7745698421');


insert into PRESTAMOS (OPCION, ID_USUARIO, NO_DIAS, SANCION_POR_DIA_EXTRA, ISBN_LIBRO1, CANTIDAD_LIBRO1, ISBN_LIBRO2, CANTIDAD_LIBRO2, ISBN_LIBRO3, CANTIDAD_LIBRO3) values
	('PRESTAMO', 'USER0001', 3, '$20.00', '12G5R78T9H6GF', 1, '3F5G47TYH869F', 1, null, null),
	('PRESTAMO', 'USER0001', 1, '$20.00', '12DE35G6H785T', 1, null, null, null, null);

insert into PRESTAMOS (OPCION, ID_USUARIO, NO_DIAS, SANCION_POR_DIA_EXTRA, ISBN_LIBRO1, CANTIDAD_LIBRO1, ISBN_LIBRO2, CANTIDAD_LIBRO2, ISBN_LIBRO3, CANTIDAD_LIBRO3) values
	('DEVOLUCION', 'USER0001', 1, '$20.00', '12DE35G6H785T', 1, null, null, null, null);


-- Consultas:

select TITULO, AUTOR, EDITORIAL from LIBROS inner join PRESTAMOS on PRESTAMOS.ISBN_LIBRO1 = LIBROS.ISBN where PRESTAMOS.NUMERO = 2;

select * from LIBROS, PRESTAMOS where PRESTAMOS.ISBN_LIBRO1 = LIBROS.ISBN;


select ISBN, TITULO, AUTOR, EDITORIAL, CODIGO_AREA, NUMERO, FECHA, NO_DIAS, ID_USUARIO from LIBROS, PRESTAMOS where PRESTAMOS.ISBN_LIBRO1 = LIBROS.ISBN or PRESTAMOS.ISBN_LIBRO2 = LIBROS.ISBN or PRESTAMOS.ISBN_LIBRO3 = LIBROS.ISBN;




-- TRIGGERS:

DELIMITER $$
CREATE TRIGGER prestamo1
    after insert on PRESTAMOS
    FOR EACH ROW
    BEGIN
    if (select OPCION from PRESTAMOS A where A.NUMERO = new.NUMERO) = 'PRESTAMO' THEN BEGIN
        update INVENTARIO set CANTIDAD_EJEMPLARES=CANTIDAD_EJEMPLARES-new.CANTIDAD_LIBRO1 where ISBN_LIBRO=new.ISBN_LIBRO1;
    END; END IF; 
END$$

DELIMITER $$
CREATE TRIGGER prestamo2
    after insert on PRESTAMOS
    FOR EACH ROW
    BEGIN
    if (select OPCION from PRESTAMOS A where A.NUMERO = new.NUMERO) = 'PRESTAMO' THEN BEGIN
        update INVENTARIO set CANTIDAD_EJEMPLARES=CANTIDAD_EJEMPLARES-new.CANTIDAD_LIBRO2 where ISBN_LIBRO=new.ISBN_LIBRO2;
    END; END IF; 
END$$

DELIMITER $$
CREATE TRIGGER prestamo3
    after insert on PRESTAMOS
    FOR EACH ROW
    BEGIN
    if (select OPCION from PRESTAMOS A where A.NUMERO = new.NUMERO) = 'PRESTAMO' THEN BEGIN
        update INVENTARIO set CANTIDAD_EJEMPLARES=CANTIDAD_EJEMPLARES-new.CANTIDAD_LIBRO3 where ISBN_LIBRO=new.ISBN_LIBRO3;
    END; END IF; 
END$$




DELIMITER $$
CREATE TRIGGER devolucion1
    after insert on PRESTAMOS
    FOR EACH ROW
    BEGIN
    if (select OPCION from PRESTAMOS A where A.NUMERO = new.NUMERO) = 'DEVOLUCION' THEN BEGIN
        update INVENTARIO set CANTIDAD_EJEMPLARES=CANTIDAD_EJEMPLARES+new.CANTIDAD_LIBRO1 where ISBN_LIBRO=new.ISBN_LIBRO1;
    END; END IF; 
END$$

DELIMITER $$
CREATE TRIGGER devolucion2
    after insert on PRESTAMOS
    FOR EACH ROW
    BEGIN
    if (select OPCION from PRESTAMOS A where A.NUMERO = new.NUMERO) = 'DEVOLUCION' THEN BEGIN
        update INVENTARIO set CANTIDAD_EJEMPLARES=CANTIDAD_EJEMPLARES+new.CANTIDAD_LIBRO2 where ISBN_LIBRO=new.ISBN_LIBRO2;
    END; END IF; 
END$$

DELIMITER $$
CREATE TRIGGER devolucion3
    after insert on PRESTAMOS
    FOR EACH ROW
    BEGIN
    if (select OPCION from PRESTAMOS A where A.NUMERO = new.NUMERO) = 'DEVOLUCION' THEN BEGIN
        update INVENTARIO set CANTIDAD_EJEMPLARES=CANTIDAD_EJEMPLARES+new.CANTIDAD_LIBRO3 where ISBN_LIBRO=new.ISBN_LIBRO3;
    END; END IF; 
END$$




-- VISTAS:

create view DEVOLUCIONES_AGOSTO as select * from PRESTAMOS where OPCION = 'DEVOLUCION' and FECHA like "2018-08%";

select * from DEVOLUCIONES_AGOSTO;

create view LIBROS_AREA1 as select * from LIBROS where CODIGO_AREA = 'AR01';

select * from LIBROS_AREA1;

create view USUARIOS_ADULTOS as select * from USUARIOS where EDAD >= 18;

select * from USUARIOS_ADULTOS;




-- PROCEDIMIENTOS:

create procedure INFO_USUARIO(NOMBRE_USUARIO VARCHAR(127))
	select * from USUARIOS where NOMBRE = NOMBRE_USUARIO;
call INFO_USUARIO('ROBERTO');
